{"version":3,"file":"component---src-templates-project-jsx-7eaad31c32286afc8578.js","mappings":"uaACWA,EAAY,uCACZC,EAAU,qCACVC,EAAO,kCACPC,EAAc,yCACdC,EAAO,kCACP,EAAO,kCACP,EAAY,uC,oBCEvB,SAASC,EAAIC,GAAgB,IAAf,SAAEC,GAAUD,EACxB,OAAOE,EAAAA,cAAA,QAAMC,UAAU,QAAQF,EACjC,CACA,SAASG,EAAIC,GAAgB,IAAf,SAAEJ,GAAUI,EACxB,OAAOH,EAAAA,cAAA,KAAGC,UAAU,gBAAgBF,EACtC,CAEA,MAAMK,EAAkB,CACtBC,WAAY,CACV,CAACC,EAAAA,MAAMC,MAAQC,GAASR,EAAAA,cAACH,EAAI,KAAEW,GAC/B,CAACF,EAAAA,MAAMG,MAAQC,IAEb,GACO,MAFUA,EAAK,GAEpB,CAEE,MAAMC,EAAUD,EAAKE,UAAU,GAC/B,OACEZ,EAAAA,cAAA,UACEa,MAAM,gBACNC,IAAG,kCAAoCH,EACvCI,MAAM,MACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,GACf,CAGJ,OAAOnB,EAAAA,cAACE,EAAI,KAAEQ,EAClB,GAGJU,WAAY,CACV,CAACC,EAAAA,OAAOC,WAAY,CAACC,EAAMxB,IAAaC,EAAAA,cAACE,EAAI,KAAEH,GAC/C,CAACsB,EAAAA,OAAOG,gBAAkBD,IACxB,MAAM,gBAAEE,GAAoBF,EAAKG,KAAKC,OACtC,OAAKF,EAGEzB,EAAAA,cAAC4B,EAAAA,EAAW,CAACC,MAAOJ,IAFlB,IAEqC,IA4C7C,SAASK,EAAIC,GAA6B,IAA5B,YAAEC,EAAW,SAAEC,GAAUF,EAC5C,MAAM,KAAEG,GAASF,EACXG,GAAeC,EAAAA,EAAAA,GAAOF,EAAKG,UAAUC,WAC3C,OACEtC,EAAAA,cAACuC,EAAAA,EAAG,CACF1B,MAAOqB,EAAKM,KACZ7C,YAAauC,EAAKvC,YAAYA,YAC9BkC,MAAOM,EACPF,SAAUA,GAGhB,CAEA,MAlDA,SAAoBQ,GAAmB,IAAlB,YAAET,GAAaS,EAClC,MAAM,KAAEP,GAASF,EACXK,GAAYK,EAAAA,EAAAA,GAASR,EAAKG,UAAUC,WAC1C,OACEtC,EAAAA,cAAC2C,EAAAA,EAAM,KACL3C,EAAAA,cAAA,OAAKC,UAAW2C,GACd5C,EAAAA,cAAA,OAAKC,UAAS,aAAe2C,GAC3B5C,EAAAA,cAAA,UAAKkC,EAAKM,MACVxC,EAAAA,cAAA,OAAKC,UAAW2C,GACbV,EAAKvC,YAAYA,aAEpBK,EAAAA,cAAC4B,EAAAA,EAAW,CACViB,IAAI,YACJ5C,UAAW2C,EACXf,MAAOQ,IAETrC,EAAAA,cAAA,OAAKC,UAAW2C,IACbE,EAAAA,EAAAA,GAAeZ,EAAKzC,QAASW,IAEhCJ,EAAAA,cAAA,OAAKC,UAAW2C,EAAAA,SACbV,EAAKa,SACJ/C,EAAAA,cAAA,KAAGgD,KAAMd,EAAKa,SACZ/C,EAAAA,cAAA,OAAKC,UAAc2C,EAAU,QAAQA,GAClCV,EAAKe,WAIZjD,EAAAA,cAACkD,EAAAA,GAAI,CAACC,GAAG,cACPnD,EAAAA,cAAA,OAAKC,UAAc2C,EAAU,QAAQ,yBAOnD,C","sources":["webpack://gagik.co/./src/styles/modules/projectPage.module.scss","webpack://gagik.co/./src/templates/project.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"projectPage-module--container--b1927\";\nexport var content = \"projectPage-module--content--454ad\";\nexport var demo = \"projectPage-module--demo--f54b0\";\nexport var description = \"projectPage-module--description--3fb17\";\nexport var more = \"projectPage-module--more--8399a\";\nexport var post = \"projectPage-module--post--520e6\";\nexport var thumbnail = \"projectPage-module--thumbnail--8041c\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { GatsbyImage, getImage, getSrc } from 'gatsby-plugin-image';\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\nimport * as style from '../styles/modules/projectPage.module.scss';\nimport SEO from '../components/SEO';\nimport Layout from '../components/layout';\n\nfunction Bold({ children }) {\n  return <span className=\"bold\">{children}</span>;\n}\nfunction Text({ children }) {\n  return <p className=\"align-center\">{children}</p>;\n}\n\nconst richTextOptions = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => <Bold>{text}</Bold>,\n    [MARKS.CODE]: (code) => {\n      const codeType = code[0];\n      switch (codeType) {\n        case 'v':\n          // eslint-disable-next-line no-case-declarations\n          const embedId = code.substring(3);\n          return (\n            <iframe\n              title=\"Project Video\"\n              src={`https://player.vimeo.com/video/${embedId}`}\n              width=\"640\"\n              height=\"360\"\n              frameBorder=\"0\"\n              allow=\"autoplay; fullscreen\"\n              allowfullscreen\n            />\n          );\n        default:\n          return <Text>{code}</Text>;\n      }\n    },\n  },\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      const { gatsbyImageData } = node.data.target;\n      if (!gatsbyImageData) {\n        return null;\n      }\n      return <GatsbyImage image={gatsbyImageData} />;\n    },\n  },\n};\n\n// See gatsby-node.js for the query that generates this page.\n\nfunction ProjectPage({ pageContext }) {\n  const { post } = pageContext;\n  const thumbnail = getImage(post.thumbnail.localFile);\n  return (\n    <Layout>\n      <div className={style.post}>\n        <div className={`container ${style.container}`}>\n          <h1>{post.name}</h1>\n          <div className={style.description}>\n            {post.description.description}\n          </div>\n          <GatsbyImage\n            alt=\"Thumbnail\"\n            className={style.thumbnail}\n            image={thumbnail}\n          />\n          <div className={style.content}>\n            {renderRichText(post.content, richTextOptions)}\n          </div>\n          <div className={style.buttons}>\n            {post.demoUrl && (\n              <a href={post.demoUrl}>\n                <div className={`${style.more} btn ${style.demo}`}>\n                  {post.demoText}\n                </div>\n              </a>\n            )}\n            <Link to=\"/#projects\">\n              <div className={`${style.more} btn`}>See more projects</div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport function Head({ pageContext, location }) {\n  const { post } = pageContext;\n  const thumbnailSrc = getSrc(post.thumbnail.localFile);\n  return (\n    <SEO\n      title={post.name}\n      description={post.description.description}\n      image={thumbnailSrc}\n      location={location}\n    />\n  );\n}\n\nexport default ProjectPage;\n"],"names":["container","content","demo","description","more","Bold","_ref","children","React","className","Text","_ref2","richTextOptions","renderMark","MARKS","BOLD","text","CODE","code","embedId","substring","title","src","width","height","frameBorder","allow","allowfullscreen","renderNode","BLOCKS","PARAGRAPH","node","EMBEDDED_ASSET","gatsbyImageData","data","target","GatsbyImage","image","Head","_ref4","pageContext","location","post","thumbnailSrc","getSrc","thumbnail","localFile","SEO","name","_ref3","getImage","Layout","style","alt","renderRichText","demoUrl","href","demoText","Link","to"],"sourceRoot":""}