{"version":3,"file":"component---src-templates-project-jsx-f3ba0792ea281c1e47a8.js","mappings":"uaACWA,EAAY,uCACZC,EAAU,qCACVC,EAAO,kCACPC,EAAc,yCACdC,EAAO,kCACP,EAAO,kCACP,EAAY,uC,oBCEvB,SAASC,EAAK,GAAe,IAAf,SAAEC,GAAU,EACxB,OAAO,wBAAMC,UAAU,QAAQD,EACjC,CACA,SAASE,EAAK,GAAe,IAAf,SAAEF,GAAU,EACxB,OAAO,qBAAGC,UAAU,gBAAgBD,EACtC,CAEA,MAAMG,EAAkB,CACtBC,WAAY,CACV,CAACC,EAAAA,MAAAA,MAAcC,GAAS,gBAACP,EAAI,KAAEO,GAC/B,CAACD,EAAAA,MAAAA,MAAcE,IAEb,GACO,MAFUA,EAAK,GAEpB,CAEE,MAAMC,EAAUD,EAAKE,UAAU,GAC/B,OACE,0BACEC,MAAM,gBACNC,IAAG,kCAAoCH,EACvCI,MAAM,MACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,GACf,CAGJ,OAAO,gBAACd,EAAI,KAAEK,EAAa,GAInCU,WAAY,CACV,CAACC,EAAAA,OAAAA,WAAmB,CAACC,EAAMnB,IAAa,gBAACE,EAAI,KAAEF,GAC/C,CAACkB,EAAAA,OAAAA,gBAAyBC,IACxB,MAAM,gBAAEC,GAAoBD,EAAKE,KAAKC,OACtC,OAAKF,EAGE,gBAAC,EAAAG,EAAW,CAACC,MAAOJ,IAFlB,IAEqC,IA6C7C,SAASK,EAAK,GAA4B,IAA5B,YAAEC,EAAW,SAAEC,GAAU,EAC5C,MAAM,KAAEC,GAASF,EACXG,GAAeC,EAAAA,EAAAA,GAAOF,EAAKG,UAAUC,WAC3C,OACE,gBAACC,EAAA,EAAG,CACFvB,MAAOkB,EAAKM,KACZrC,YAAa+B,EAAK/B,YAAYA,YAC9B2B,MAAOK,EACPF,SAAUA,GAGhB,CAEA,MAnDA,SAAqB,GAAkB,IAAlB,YAAED,GAAa,EAClC,MAAM,KAAEE,GAASF,EACXK,GAAYI,EAAAA,EAAAA,GAASP,EAAKG,UAAUC,WAE1C,OADAI,QAAQC,IAAI,YAAaN,GAEvB,gBAAC,IAAM,KACL,uBAAK9B,UAAWqC,GACd,uBAAKrC,UAAS,aAAeqC,GAC3B,0BAAKV,EAAKM,MACV,uBAAKjC,UAAWqC,GACbV,EAAK/B,YAAYA,aAEpB,gBAAC,EAAA0B,EAAW,CACVgB,IAAI,YACJtC,UAAWqC,EACXd,MAAOO,IAET,uBAAK9B,UAAWqC,IACbE,EAAAA,EAAAA,GAAeZ,EAAKjC,QAASQ,IAEhC,uBAAKF,UAAWqC,EAAAA,SACbV,EAAKa,SACJ,qBAAGC,KAAMd,EAAKa,SACZ,uBAAKxC,UAAcqC,EAAU,QAAQA,GAClCV,EAAKe,WAIZ,gBAAC,KAAI,CAACC,GAAG,cACP,uBAAK3C,UAAcqC,EAAU,QAAQ,yBAOnD,C","sources":["webpack://gagik.co/./src/styles/modules/projectPage.module.scss","webpack://gagik.co/./src/templates/project.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"projectPage-module--container--b1927\";\nexport var content = \"projectPage-module--content--454ad\";\nexport var demo = \"projectPage-module--demo--f54b0\";\nexport var description = \"projectPage-module--description--3fb17\";\nexport var more = \"projectPage-module--more--8399a\";\nexport var post = \"projectPage-module--post--520e6\";\nexport var thumbnail = \"projectPage-module--thumbnail--8041c\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport { BLOCKS, MARKS } from '@contentful/rich-text-types';\nimport { GatsbyImage, getImage, getSrc } from 'gatsby-plugin-image';\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\nimport * as style from '../styles/modules/projectPage.module.scss';\nimport SEO from '../components/SEO';\nimport Layout from '../components/layout';\n\nfunction Bold({ children }) {\n  return <span className=\"bold\">{children}</span>;\n}\nfunction Text({ children }) {\n  return <p className=\"align-center\">{children}</p>;\n}\n\nconst richTextOptions = {\n  renderMark: {\n    [MARKS.BOLD]: (text) => <Bold>{text}</Bold>,\n    [MARKS.CODE]: (code) => {\n      const codeType = code[0];\n      switch (codeType) {\n        case 'v':\n          // eslint-disable-next-line no-case-declarations\n          const embedId = code.substring(3);\n          return (\n            <iframe\n              title=\"Project Video\"\n              src={`https://player.vimeo.com/video/${embedId}`}\n              width=\"640\"\n              height=\"360\"\n              frameBorder=\"0\"\n              allow=\"autoplay; fullscreen\"\n              allowfullscreen\n            />\n          );\n        default:\n          return <Text>{code}</Text>;\n      }\n    },\n  },\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      const { gatsbyImageData } = node.data.target;\n      if (!gatsbyImageData) {\n        return null;\n      }\n      return <GatsbyImage image={gatsbyImageData} />;\n    },\n  },\n};\n\n// See gatsby-node.js for the query that generates this page.\n\nfunction ProjectPage({ pageContext }) {\n  const { post } = pageContext;\n  const thumbnail = getImage(post.thumbnail.localFile);\n  console.log('thumbnail', thumbnail);\n  return (\n    <Layout>\n      <div className={style.post}>\n        <div className={`container ${style.container}`}>\n          <h1>{post.name}</h1>\n          <div className={style.description}>\n            {post.description.description}\n          </div>\n          <GatsbyImage\n            alt=\"Thumbnail\"\n            className={style.thumbnail}\n            image={thumbnail}\n          />\n          <div className={style.content}>\n            {renderRichText(post.content, richTextOptions)}\n          </div>\n          <div className={style.buttons}>\n            {post.demoUrl && (\n              <a href={post.demoUrl}>\n                <div className={`${style.more} btn ${style.demo}`}>\n                  {post.demoText}\n                </div>\n              </a>\n            )}\n            <Link to=\"/#projects\">\n              <div className={`${style.more} btn`}>See more projects</div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport function Head({ pageContext, location }) {\n  const { post } = pageContext;\n  const thumbnailSrc = getSrc(post.thumbnail.localFile);\n  return (\n    <SEO\n      title={post.name}\n      description={post.description.description}\n      image={thumbnailSrc}\n      location={location}\n    />\n  );\n}\n\nexport default ProjectPage;\n"],"names":["container","content","demo","description","more","Bold","children","className","Text","richTextOptions","renderMark","MARKS","text","code","embedId","substring","title","src","width","height","frameBorder","allow","allowfullscreen","renderNode","BLOCKS","node","gatsbyImageData","data","target","G","image","Head","pageContext","location","post","thumbnailSrc","getSrc","thumbnail","localFile","SEO","name","getImage","console","log","style","alt","renderRichText","demoUrl","href","demoText","to"],"sourceRoot":""}